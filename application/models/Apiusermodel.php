<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Apiusermodel extends CI_Model {    function __construct()    {        parent::__construct();    }
//#################### Email ####################//	function sendMail($to,$subject,$email_message)	{		// Set content-type header for sending HTML email		$headers = "MIME-Version: 1.0" . "\r\n";		$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";		// Additional headers		$headers .= 'From: ENSYFI<admin@spv.com>' . "\r\n";		mail($to,$subject,$email_message,$headers);	}//#################### Email End ####################////#################### SMS ####################//	function sendSMS($user_mobile,$mobile_message)	{        //Your authentication key          $authKey = "191431AStibz285a4f14b4";          //Multiple mobiles numbers separated by comma          $mobile = "$user_mobile";          //Sender ID,While using route4 sender id should be 6 characters long.          $senderId = "SPVAPP";          //Your message to send, Add URL encoding here.          $message = $mobile_message;          //Define route          $route = "transactional";          //Prepare you post parameters          $postData = array(              'authkey' => $authKey,              'mobiles' => $mobile,              'message' => $message,              'sender' => $senderId,              'route' => $route          );          //API URL          $url="https://control.msg91.com/api/sendhttp.php";          // init the resource          $ch = curl_init();          curl_setopt_array($ch, array(              CURLOPT_URL => $url,              CURLOPT_RETURNTRANSFER => true,              CURLOPT_POST => true,              CURLOPT_POSTFIELDS => $postData              //,CURLOPT_FOLLOWLOCATION => true          ));          //Ignore SSL certificate verification          curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);          curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);          //get response          $output = curl_exec($ch);          //Print error if any          if(curl_errno($ch))          {              echo 'error:' . curl_error($ch);          }          curl_close($ch);	}//#################### SMS End ####################////#################### Notification ####################//	function sendNotification($gcm_key,$Title,$Message,$mobiletype)	{		if ($mobiletype =='1'){		    require_once 'assets/notification/Firebase.php';            require_once 'assets/notification/Push.php';            $device_token = explode(",", $gcm_key);            $push = null;//        //first check if the push has an image with it		    $push = new Push(					$Title,					$Message,					'http://heylaapp.com/assets/notification/images/events.jpg'				);// 			//if the push don't have an image give null in place of image 			// $push = new Push( 			// 		'HEYLA', 			// 		'Hi Testing from maran', 			// 		null 			// 	);    		//getting the push from push object    		$mPushNotification = $push->getPush();    		//creating firebase class object    		$firebase = new Firebase();    	foreach($device_token as $token) {    		 $firebase->send(array($token),$mPushNotification);    	}		} else {			$device_token = explode(",", $gcm_key);			$passphrase = 'hs123';		    $loction ='assets/notification/heylaapp.pem';			$ctx = stream_context_create();			stream_context_set_option($ctx, 'ssl', 'local_cert', $loction);			stream_context_set_option($ctx, 'ssl', 'passphrase', $passphrase);			// Open a connection to the APNS server			$fp = stream_socket_client('ssl://gateway.sandbox.push.apple.com:2195', $err, $errstr, 60, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);			if (!$fp)				exit("Failed to connect: $err $errstr" . PHP_EOL);			$body['aps'] = array(				'alert' => array(					'body' => $Message,					'action-loc-key' => 'Heyla App',				),				'badge' => 2,				'sound' => 'assets/notification/oven.caf',				);			$payload = json_encode($body);			foreach($device_token as $token) {				// Build the binary notification    			$msg = chr(0) . pack("n", 32) . pack("H*", str_replace(" ", "", $token)) . pack("n", strlen($payload)) . $payload;        		$result = fwrite($fp, $msg, strlen($msg));			}				fclose($fp);		}	}//#################### Notification End ####################////#################### Generate otp ####################//
	public function Generate_otp($mobile_number)	{		$digits = 6;		$OTP = str_pad(rand(0, pow(10, $digits)-1), $digits, '0', STR_PAD_LEFT);					$sql = "SELECT * FROM user_master WHERE phone_number='$mobile_number'";		$user_result = $this->db->query($sql);		if($user_result->num_rows()>0)		{			$update_sql = "UPDATE user_master SET otp = '$OTP' WHERE phone_number  ='$mobile_number'";    		$update_otp = $this->db->query($update_sql);			$mobile_message = 'Dear user, Use the OTP '.$OTP.' to login.- Team SPVAPP';			//$this->sendSMS($mobile_number,$mobile_message);		} else {			$sQuery = "INSERT INTO user_master (phone_number,otp,language_id,subscription,notification,status,created_at) VALUES ('".$mobile_number. "','".$OTP. "','1','1','1','Active',now())";			$insert_user = $this->db->query($sQuery);			$user_id = $this->db->insert_id();			$mobile_message = 'Dear user, Use the OTP '.$OTP.' to login.- Team SPVAPP';			//$this->sendSMS($mobile_number,$mobile_message);		}				$response = array("status" => "Success", "msg" => "OTP Generated", "mobile_number" => $mobile_number,"otp" => $OTP);		return $response;	}
//#################### Generate otp End ####################//
//#################### Login ####################//	public function Login($mobile_number,$otp,$device_token,$device_type)	{		$userQuery = "SELECT * FROM user_master WHERE phone_number='$mobile_number' AND otp = $otp AND status = 'Active'";		$user_result = $this->db->query($userQuery);		if($user_result->num_rows()>0)		{			foreach ($user_result->result() as $rows)			{				$user_id = $rows->id;				$full_name  = $rows->full_name ;				$phone_number = $rows->phone_number;				$email_id = $rows->email_id;				$gender = $rows->gender;				$dob = $rows->dob;				$profile_pic = $rows->profile_pic;				$language_id = $rows->language_id;				$subscription = $rows->subscription;				$notification = $rows->notification;				$status = $rows->status;			}			if ($profile_pic != ''){			    $picture_url = base_url().'assets/users/'.$profile_pic;			}else {				$picture_url = '';			}						$userData  = array(							"user_id" => $user_id,							"full_name" => $full_name,							"phone_number" => $phone_number,							"language_id" => $language_id,							"profile_pic" => $picture_url						);							$gcmQuery = "SELECT * FROM notification_master WHERE device_token like '%" .$device_token. "%' LIMIT 1";			$gcm_result = $this->db->query($gcmQuery);			if($gcm_result->num_rows()==0)			{				$sQuery = "INSERT INTO notification_master (user_master_id,device_type,device_token,created_at) VALUES ('". $user_id . "','". $device_type . "','". $device_token . "',now())";				$update_gcm = $this->db->query($sQuery);			}							$response = array("status" => "Success", "msg" => "Login Successfully", "userData" => $userData);		} else {			 $response = array("status" => "Error", "msg" => "Account Deactivated");		}		return $response;	}//#################### Login End ####################////#################### Profile update ####################//	public function Profile_update($user_id,$full_name,$phone_number,$email_id,$gender,$dob)	{		$update_sql= "UPDATE user_master SET full_name ='$full_name',phone_number ='$phone_number',email_id ='$email_id',gender ='$gender',dob ='$dob',updated_by='$user_id',updated_at=now() WHERE id='$user_id'";		$update_result = $this->db->query($update_sql);				$response = array("status" => "Success", "msg" => "Profile Updated");		return $response;	}//#################### Profile_update End ####################////#################### Profile Pic Update ####################//	public function Profilepic_update($user_id,$userFileName)	{            $update_sql= "UPDATE user_master SET profile_pic='$userFileName' WHERE id='$user_id'";			$update_result = $this->db->query($update_sql);			$picture_url = base_url().'assets/users/'.$userFileName;			$response = array("status" => "success", "msg" => "Profile Picture Updated","picture_url" =>$picture_url);			return $response;	}//#################### Profile Pic Update End ####################////#################### Language update ####################//	public function Language_update($user_id,$language_id)	{		$update_sql= "UPDATE user_master SET language_id ='$language_id' WHERE id='$user_id'";		$update_result = $this->db->query($update_sql);				$response = array("status" => "Success", "msg" => "Language Updated","language_id" =>$language_id);		return $response;	}//#################### Language update End ####################////#################### Subscription update ####################//	public function Subscription_update($user_id,$status)	{		$update_sql= "UPDATE user_master SET subscription ='$status' WHERE id='$user_id'";		$update_result = $this->db->query($update_sql);				$response = array("status" => "Success", "msg" => "Subscription Updated");		return $response;	}//#################### Subscription update End ####################////#################### Notification update ####################//	public function Notification_update($user_id,$status)	{		$update_sql= "UPDATE user_master SET notification ='$status' WHERE id='$user_id'";		$update_result = $this->db->query($update_sql);				$response = array("status" => "Success", "msg" => "Notification Updated");		return $response;	}//#################### Notification update End ####################//
}
?>
